<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>AutoEllithiumSphere</artifactId>
    <version>1.0-SNAPSHOT</version>
    <developers>
        <developer>
            <name>Abdelrahman Ellithy</name>
            <email>abdelarhmanellithy@gmail.com.</email>
            <organization>GitHub</organization>
            <organizationUrl>https://github.com/Abdelrhman-Ellithy/AutoEllithiumSphere</organizationUrl>
            <url>https://www.linkedin.com/in/abdelrahman-ellithy-3841a7270/</url>
        </developer>
    </developers>
    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <seleniumVersion>4.23.1</seleniumVersion>
        <testNG>7.10.2</testNG>
        <JavaFaker>1.0.2</JavaFaker>
        <gsonVersion>2.10.1</gsonVersion>
        <SLF4JAPIVersion>2.0.13</SLF4JAPIVersion>
        <SLF4JSimpleVersion>2.0.13</SLF4JSimpleVersion>
        <log4jVersion>2.23.1</log4jVersion>
        <AllureVersion>2.28.0</AllureVersion>
        <Commons>2.16.1</Commons>
        <aspectj.version>1.9.20.1</aspectj.version>
        <CSV>1.8</CSV>
        <ApachePOI>5.2.3</ApachePOI>
        <AddPOI>5.1.1</AddPOI>
        <Cucumber>7.18.0</Cucumber>
        <cucumberTsetNG>7.18.0</cucumberTsetNG>
        <restversion>5.4.0</restversion>
        <gherkinversion>28.0.0</gherkinversion>
    </properties>
    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub AutoEllithiumSphere Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/Abdelrhman-Ellithy/AutoEllithiumSphere</url>
        </repository>
    </distributionManagement>
    <dependencies>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${seleniumVersion}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.github.javafaker/javafaker -->
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>${JavaFaker}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gsonVersion}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.cucumber/gherkin -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>gherkin</artifactId>
            <version>${gherkinversion}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${SLF4JAPIVersion}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${SLF4JSimpleVersion}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4jVersion}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j2-impl -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j2-impl</artifactId>
            <version>${log4jVersion}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-1.2-api -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
            <version>${log4jVersion}</version>
        </dependency>
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-testng</artifactId>
            <version>${AllureVersion}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${Commons}</version>
        </dependency>

        <!-- Apache Commons CSV -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>${CSV}</version>
        </dependency>

        <!-- Apache POI for Excel -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${ApachePOI}</version>
        </dependency>

        <!-- Additional POI dependencies for handling Excel files -->
        <dependency>
            <groupId>org.apache.xmlbeans</groupId>
            <artifactId>xmlbeans</artifactId>
            <version>${AddPOI}</version>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${Cucumber}</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-testng</artifactId>
            <version>${cucumberTsetNG}</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testNG}</version>
            <scope>compile</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.rest-assured/rest-assured -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${restversion}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>
    <build>
        <plugins>
            <!-- Maven Surefire Plugin to run tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <suiteXmlFiles>
                        <suiteXmlFile>
                            TestNGRunner.xml
                        </suiteXmlFile>
                    </suiteXmlFiles>
<!--                           <properties>-->
<!--                                      <property>-->
<!--                                          <name>dataproviderthreadcount</name>-->
<!--                                          <value>${ThreadValue}</value> &lt;!&ndash;  to setup number of scenarios to run in parallel execution     &ndash;&gt;-->
<!--                                    </property>-->
<!--                          </properties>-->
                    </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                </configuration>
            </plugin>
            <!-- **Allure Maven Plugin** to generate reports -->
            <plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>2.13.0</version>
                <executions>
                    <execution>
                        <id>allure-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- **Maven Clean Plugin** to clean allure results -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>Test-Output/Reports/Allure/allure-results</directory>
                        </fileset>
                        <fileset>
                            <directory>Test-Output/Logs</directory> <!-- Clean logs -->
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- **Maven Resources Plugin** to clear directories before test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>clear-allure-results</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>Test-Output/Reports/Allure/allure-results</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                    <excludes>
                                        <exclude>**/*.gitkeep</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version> <!-- Use a stable version -->
                <configuration>
                    <!-- Specify the listener here -->
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>AutoEllithiumSphere.com.CustomTestNGListener</value>
                        </property>
                    </properties>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include> <!-- Include all properties files -->
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources/properties/default</directory>
                <includes>
                    <include>**/*.properties</include> <!-- Include all properties files -->
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources/properties/custom</directory>
                <includes>
                    <include>**/*.properties</include> <!-- Include all properties files -->
                </includes>
            </resource>
        </resources>
        <!-- Maven Surefire Plugin for Unit Tests -->
    </build>
</project>